;; Analyzed by ClojureScript 0.0-2760
{:defs {bind-keydown {:protocol-inline nil, :name presentation-tool.core/bind-keydown, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 0}), :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, prev-slide! {:protocol-inline nil, :name presentation-tool.core/prev-slide!, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 0}), :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, next-slide! {:protocol-inline nil, :name presentation-tool.core/next-slide!, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 0}), :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, main {:protocol-inline nil, :name presentation-tool.core/main, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, root-component {:file "src/presentation_tool/core.cljs", :line 23, :column 1, :end-line 23, :end-column 21, :test true, :name presentation-tool.core/root-component}, slide-component {:protocol-inline nil, :name presentation-tool.core/slide-component, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 23, :method-params ([i html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj-nil}, :variadic false, :max-fixed-arity 2}), :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i html])), :test true}, current-slide {:file "src/presentation_tool/core.cljs", :line 15, :column 1, :end-line 15, :end-column 24, :test true, :name presentation-tool.core/current-slide}, slides {:file "src/presentation_tool/core.cljs", :line 14, :column 1, :end-line 14, :end-column 13, :test true, :name presentation-tool.core/slides}, highlight-code {:protocol-inline nil, :name presentation-tool.core/highlight-code, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}}, :name presentation-tool.core, :doc nil, :excludes #{}, :use-macros {read-presentation presentation-tool.macro}, :require-macros {presentation-tool.macro presentation-tool.macro}, :uses {atom reagent.core}, :requires {reagent.core reagent.core, reagent reagent.core}, :imports nil}