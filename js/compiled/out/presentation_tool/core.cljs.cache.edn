;; Analyzed by ClojureScript 0.0-3153
{:use-macros {read-presentation presentation-tool.macro}, :excludes #{}, :name presentation-tool.core, :imports nil, :requires {reagent.core reagent.core, reagent reagent.core}, :uses {atom reagent.core}, :defs {bind-keydown {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 19, :end-line 51, :column 7, :line 51}, :name presentation-tool.core/bind-keydown, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 0}), :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, prev-slide! {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 18, :end-line 47, :column 7, :line 47}, :name presentation-tool.core/prev-slide!, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 0}), :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, next-slide! {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 18, :end-line 43, :column 7, :line 43}, :name presentation-tool.core/next-slide!, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 0}), :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, main {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 11, :end-line 37, :column 7, :line 37}, :name presentation-tool.core/main, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, root-component {:file "src/presentation_tool/core.cljs", :meta {:file nil, :end-column 20, :end-line 24, :column 6, :line 24}, :line 24, :column 1, :end-line 24, :end-column 20, :test true, :name presentation-tool.core/root-component}, slide-component {:protocol-inline nil, :meta {:file nil, :arglists (quote ([i html])), :end-column 22, :end-line 18, :column 7, :line 18}, :name presentation-tool.core/slide-component, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 22, :method-params ([i html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj-nil}, :variadic false, :max-fixed-arity 2}), :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i html])), :test true}, current-slide {:file "src/presentation_tool/core.cljs", :meta {:file nil, :end-column 23, :end-line 14, :column 10, :line 14}, :line 14, :column 1, :end-line 14, :end-column 23, :test true, :name presentation-tool.core/current-slide}, slides {:file "src/presentation_tool/core.cljs", :meta {:file nil, :end-column 16, :end-line 13, :column 10, :line 13}, :line 13, :column 1, :end-line 13, :end-column 16, :test true, :name presentation-tool.core/slides}, highlight-code {:protocol-inline nil, :meta {:file nil, :arglists (quote ([this])), :end-column 21, :end-line 7, :column 7, :line 7}, :name presentation-tool.core/highlight-code, :variadic false, :file "src/presentation_tool/core.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}}, :require-macros {presentation-tool.macro presentation-tool.macro}, :cljs.analyzer/constants {:order [:div :dangerouslySetInnerHTML :__html :key :p :style :position :left :top :absolute :component-did-update :component-did-mount], :seen #{:key :top :component-did-mount :component-did-update :absolute :style :div :position :__html :p :dangerouslySetInnerHTML :left}}, :doc nil}